name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

permissions:
  contents: read # Erforderlich, um den Code auszuchecken
  id-token: write # Erforderlich für Workload Identity Federation (OIDC)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # NEU: Setze den Buildx-Builder explizit auf 'docker-container' für Caching
    - name: Set up Docker Buildx
      id: buildx # Wichtig für die Ausgabe des Buildernamens
      uses: docker/setup-buildx-action@v3

    # NEU: Authentifizierung bei Google Cloud über Workload Identity Federation (WIF)
    - name: Authenticate to Google Cloud (WIF)
      uses: google-github-actions/auth@v2
      with:
        # Dies ist der vollständige Ressourcenname deines Workload Identity Providers in Google Cloud
        # Du findest ihn in der GCP Console unter IAM & Admin > Workload Identity Federation > [Dein Pool] > [Dein Provider]
        workload_identity_provider: 'projects/396694012221/locations/global/workloadIdentityPools/github-podtracker-pool-tsp/providers/github-codespaces'
        # Dies ist die E-Mail-Adresse des Google Cloud Service Accounts, den GitHub Actions annehmen soll
        # Dieser SA muss die nötigen Rollen haben (Cloud Run Admin, Storage Object Admin etc.)
        service_account: 'my-service-account@amiable-mix-465520-u7.iam.gserviceaccount.com' # KORREKTUR: Korrekte Service Account E-Mail-Adresse

    # NEU: Konfiguriere Docker für Google Container Registry (GCR)
    # Nutzt die über WIF authentifizierten gcloud-Credentials
    - name: Configure Docker for Google Container Registry
      run: gcloud auth configure-docker gcr.io

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        echo "Tests werden hier ausgeführt..."

    - name: Build and Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: gcr.io/amiable-mix-465520-u7/podtracker-image:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        builder: ${{ steps.buildx.outputs.name }} # Verwendet den von setup-buildx-action konfigurierten Builder

    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: podcast-tracker-app
        image: gcr.io/amiable-mix-465520-u7/podtracker-image:latest
        region: europe-west3
        flags: --allow-unauthenticated # Erlaubt unauthentifizierten Zugriff auf den Cloud Run Dienst

